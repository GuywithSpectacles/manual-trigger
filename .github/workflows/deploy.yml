name: 🚀 Deploy PHP Frontends to VPS
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: ✅ Checkout Code
        uses: actions/checkout@v3
      - name: 🔐 Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.MAC_HOSTINGER_VPS }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -4 ${{ vars.VPS_HOST }} >> ~/.ssh/known_hosts
      - name: 📂 Sync Frontend Files
        run: |
          for folder in apps/frontend*; do
            NAME=$(basename $folder)
            echo "🚚 Deploying $NAME..."
            rsync -avz --delete \
              -e "ssh -4 -i ~/.ssh/id_ed25519" \
              $folder/ ${{ vars.VPS_USER }}@${{ vars.VPS_HOST }}:/home/${{ vars.VPS_USER }}/$NAME
          done
      - name: ⚙️ Configure Nginx and Databases Remotely
        run: |
          ssh -4 -i ~/.ssh/id_ed25519 ${{ vars.VPS_USER }}@${{ vars.VPS_HOST }} bash -s <<'EOF'
            whoami
            sudo -l
            BASE_DIR="/home/aqeel"
            PORTS_FILE="$BASE_DIR/ports.txt"
            START_PORT=8081
            BACKUP_DIR="$BASE_DIR/backups"
            mkdir -p "$BACKUP_DIR"
            cd "$BASE_DIR" || exit 1
            sudo -n /usr/bin/rm -f /etc/nginx/sites-available/frontend* /etc/nginx/sites-enabled/frontend*
            for dir in frontend*/; do
              SITE_NAME="${dir%/}"
              DEPLOY_DIR="$BASE_DIR/$SITE_NAME"
              CONFIG_FILE="/etc/nginx/sites-available/$SITE_NAME"
              ENABLED_LINK="/etc/nginx/sites-enabled/$SITE_NAME"
              DB_NAME="${SITE_NAME}_db"
              DB_USER="${SITE_NAME}_user"
              DB_PASS=$(openssl rand -base64 12 | tr -dc 'a-zA-Z0-9')
              # Database setup
              if [ -d "$DEPLOY_DIR" ]; then
                # Check if database exists
                DB_EXISTS=$(sudo -n /usr/bin/mysql -uroot -e "SELECT SCHEMA_NAME FROM information_schema.SCHEMATA WHERE SCHEMA_NAME='$DB_NAME'" | grep "$DB_NAME")
                if [ -z "$DB_EXISTS" ]; then
                  echo "🗄 Creating database $DB_NAME and user $DB_USER"
                  sudo -n /usr/bin/mysql -uroot -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
                  sudo -n /usr/bin/mysql -uroot -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"
                  sudo -n /usr/bin/mysql -uroot -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"
                  sudo -n /usr/bin/mysql -uroot -e "FLUSH PRIVILEGES;"
                  # Apply schema if it exists
                  if [ -f "$DEPLOY_DIR/schema.sql" ]; then
                    sudo -n /usr/bin/mysql -uroot "$DB_NAME" < "$DEPLOY_DIR/schema.sql"
                    echo "📜 Applied schema for $DB_NAME"
                  fi
                fi
                # Write config.php
                sudo -n /usr/bin/bash -c "cat > '$DEPLOY_DIR/config.php'" <<EOCONFIGPHP
          <?php
          define('DB_HOST', 'localhost');
          define('DB_NAME', '$DB_NAME');
          define('DB_USER', '$DB_USER');
          define('DB_PASS', '$DB_PASS');
          ?>
          EOCONFIGPHP
                          sudo -n /usr/bin/chown aqeel:www-data "$DEPLOY_DIR/config.php"
                          sudo -n /usr/bin/chmod 640 "$DEPLOY_DIR/config.php"
                        fi
                        # Port assignment
                        touch "$PORTS_FILE"
                        PORT=$(grep "^$SITE_NAME:" "$PORTS_FILE" | cut -d':' -f2)
                        if [ -z "$PORT" ]; then
                          LAST_PORT=$(awk -F: '{print $2}' "$PORTS_FILE" | sort -n | tail -1)
                          [ -z "$LAST_PORT" ] && LAST_PORT=$((START_PORT - 1))
                          PORT=$((LAST_PORT + 1))
                          echo "$SITE_NAME:$PORT" >> "$PORTS_FILE"
                        fi
                        # Backup deployment directory
                        if [ -d "$DEPLOY_DIR" ]; then
                          TIME=$(date +%Y%m%d%H%M%S)
                          cp -r "$DEPLOY_DIR" "$BACKUP_DIR/${SITE_NAME}_$TIME"
                        fi
                        # Nginx configuration
                        sudo -n /usr/bin/bash -c "cat > '$CONFIG_FILE'" <<EOCONFIG
          server {
              listen $PORT;
              server_name localhost;
              root $DEPLOY_DIR;
              index index.php;
              location / {
                  try_files \$uri \$uri/ /index.php?\$query_string;
              }
              location ~ \.php$ {
                  include snippets/fastcgi-php.conf;
                  fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
              }
              location ~ /\.ht {
                  deny all;
              }
          }
          EOCONFIG
              sudo -n /usr/bin/ln -sf "$CONFIG_FILE" "$ENABLED_LINK"
              echo "🌍 $SITE_NAME live at http://31.97.69.91:$PORT"
            done
            # Configure firewall after updating ports.txt
            sudo -n /usr/sbin/ufw allow 22/tcp
            sudo -n /usr/sbin/ufw allow 80/tcp
            sudo -n /usr/sbin/ufw allow 443/tcp
            if [ -f "$PORTS_FILE" ]; then
              while IFS=: read -r site port; do
                if [ -n "$port" ]; then
                  sudo -n /usr/sbin/ufw allow $port/tcp
                  echo "🔓 Allowed port $port for $site"
                fi
              done < "$PORTS_FILE"
            fi
            sudo -n /usr/sbin/ufw reload
            sudo -n /usr/sbin/ufw status
            sudo -n /usr/sbin/nginx -t || { echo "Nginx config test failed"; exit 1; }
            sudo -n /usr/bin/systemctl reload nginx || { echo "Nginx reload failed"; exit 1; }
            echo "✅ Nginx configured and reloaded successfully"
          EOF
      - name: 🐛 Debug SSH
        run: |
          ssh -4 -i ~/.ssh/id_ed25519 ${{ vars.VPS_USER }}@${{ vars.VPS_HOST }} "echo '✅ SSH Working — Deployment Complete'"